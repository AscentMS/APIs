swagger: "2.0"
info:
  description: ""
  version: "1.0.12"
  title: "Evergreen Life API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "development@evergreen-life.co.uk"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:7001"
basePath: "/api/v1"
tags:
- name: "GP demographics"
  description: "Demographics as held on file by the user's GP."
- name: "Prescription orders"
schemes:
- "http"
paths:
  /gp/demographics:
    get:
      tags:
      - "GP demographics"
      summary: "Retrieve demographics"
      operationId: "getDemographics"
      security:
      - OAuth2:
        - gp.demographics.read      
      produces:
      - "application/json"
      responses:
        404:
          description: "User not found"
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/Demographics"
  /prescriptions/requests/{prescriptionRequestId}:
    get:
      tags:
      - "Prescription requests"
      operationId: "getPrescriptionRequestById"
      security:
      - OAuth2:
        - prescriptions.orders.create
        - prescriptions.orders.manager
      produces:
      - "application/json"
      parameters:
      - name: "prescriptionRequestId"
        in: "path"
        description: "ID of prescription request to return"
        required: true
        type: "string"
      responses:
        404:
          description: "Request not found"
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/PrescriptionRequest"
  /prescriptions/orders:
    post:
      tags:
      - "Prescription orders"
      operationId: "createPrescription"
      security:
      - OAuth2:
        - prescriptions.orders.create
        - prescriptions.orders.manager
      produces:
      - "application/json"
      parameters:
      - name: "prescription"
        in: "body"
        description: "The prescription order for the user."
        required: true
        schema:
          $ref: '#/definitions/PrescriptionOrder'
      responses:
        200:
          description:  "Success"
          schema:
            $ref: "#/definitions/PrescriptionOrder"
  /prescriptions/orders/{prescriptionOrderId}:
    get:
      tags:
      - "Prescription orders"
      summary: "Retrieve a prescription order by its id"
      operationId: "getPrescriptionOrderById"
      security:
      - OAuth2:
        - prescriptions.orders.read
        - prescriptions.orders.manage
      produces:
      - "application/json"
      parameters:
      - name: "prescriptionOrderId"
        in: "path"
        description: "ID of prescription order to return"
        required: true
        type: "string"
      responses:
        404:
          description: "Order not found"
        200:
          description: "Success"
          schema:
            $ref: "#/definitions/PrescriptionOrder"
  /prescriptions/orders/{prescriptionOrderId}/tracking:
    post:
      tags: 
      - "Prescription orders"
      summary: "Update the tracking information associated with the delivery of a prescription order"
      description: "Note that the most recent status posted to this endpoint is the ONLY status displayed to the user."
      operationId: "updatePrescriptionOrderTrackingById"
      security:
      - OAuth2:
        - prescriptions.orders.update
        - prescriptions.orders.manage
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "prescriptionOrderId"
        in: "path"
        description: "ID of prescription order whose status to update"
        required: true
        type: "string"
      - name: "tracking"
        in: "body"
        description: "The tracking information with which to update the order."
        required: true
        schema:
          $ref: "#/definitions/Tracking"
      responses:
        404:
          description: "Order not found"
        200:
          description: "Success"
  /prescriptions/orders/{prescriptionOrderId}/status:
    post:
      tags: 
      - "Prescription orders"
      summary: "Update the status of a prescription order"
      description: "Note that the most recent status posted to this endpoint is the foremost status displayed to the user."
      operationId: "updatePrescriptionOrderStatusById"
      security:
      - OAuth2:
        - prescriptions.orders.update
        - prescriptions.orders.manage
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "prescriptionOrderId"
        in: "path"
        description: "ID of prescription order whose status to update"
        required: true
        type: "string"
      - name: "status"
        in: "body"
        description: "The status with which to update the order"
        required: true
        schema:
          $ref: "#/definitions/Status"
      responses:
        404:
          description: "Order not found"
        200:
          description: "Success"
  /prescriptions/orders/{prescriptionOrderId}/items/{prescriptionOrderItemId}:
    delete:
      tags:
      - "Prescriptions orders"
      summary: "Mark an item as deleted from an order."
      operationId: "deletePrescriptionOrderItemFromPrescriptionOrder"
      security:
      - OAuth2:
        - prescriptions.orders.update
        - prescriptions.orders.manage
      produces:
      - "application/json"
      parameters:
      - name: "prescriptionOrderId"
        in: "path"
        description: "ID of prescription order whose status to update"
        required: true
        type: "string"
      - name: "prescriptionOrderItemId"
        in: "path"
        description: "ID of the item within the prescription order whose status to update"
        required: true
        type: "string"
      responses:
        404:
          description: "Order not found"
        200:
          description: "Success"
  /prescriptions/orders/{prescriptionOrderId}/items/{prescriptionOrderItemId}/status:
    post:
      tags: 
      - "Prescription orders"
      summary: "Update the status of specific item within a prescription order"
      description: "Note that the most recent status posted to this endpoint is the foremost status displayed to the user."
      operationId: "updatePrescriptionOrderItemStatusById"
      security:
      - OAuth2:
        - prescriptions.orders.update
        - prescriptions.orders.manage
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "prescriptionOrderId"
        in: "path"
        description: "ID of prescription order whose status to update"
        required: true
        type: "string"
      - name: "prescriptionOrderItemId"
        in: "path"
        description: "ID of the item within the prescription order whose status to update"
        required: true
        type: "string"
      - name: "status"
        in: "body"
        description: "The status with which to update the order item"
        required: true
        schema:
          $ref: "#/definitions/Status"
      responses:
        404:
          description: "Order not found"
        200:
          description: "Success"
securityDefinitions:
  OAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: http://localhost:5000/authorize
    tokenUrl: http://localhost:5000/token
    scopes:
      gp.demographics.read: Grants read access to a user's demographic information (as currently understood by the GP).
      prescriptions.orders.create: Grants access to create a new prescription order
      prescriptions.orders.read: Grants access to read prescription detail
      prescriptions.orders.update: Grants access to update status and tracking information for prescription orders
      prescriptions.orders.manage: Grants access to create, read, and update prescription orders
definitions:
  Issue:
    type: "object"
    required:
    - authorised_issues
    - issue_number
    properties:
      authorised_issues:
        description: "The number of authorised issues."
        type: "number"
      issue_number:
        description: "The issue number."
        type: "number"
  Status:
    type: "object"
    required:
    - value
    properties:
      value:
        type: "string"
        enum: [SELECTED, PLACED, RECEIVED, DISPENSED, DISPATCHED, DELAYED]
      display:
        type: "string"
      description: 
        type: "string"
      reason: 
        type: "string"
  Tracking:
    type: "object"
    required:
    - id
    properties:
      id:
        description: "The Tracking ID/number for the delivery of this PrescriptionOrder"
        allOf:
        - $ref: "#/definitions/ID"
      url:
        type: "string"
        description: "URL for the user to visit to view detailed status of their order"
  ID:
    type: "object"
    required:
    - value
    - type
    properties:
      value:
        type: "string"
      type:
        type: "string"
  PrescriptionOrderItem:
    type: "object"
    required:
    - _id
    - name
    - status
    properties:
      _id:
        type: "string"
        description: "An identifier assigned by the third party, which corresponds to the prescriptionOrderItemId, in the PUT .../status requests."
      modifieddate:
        type: "string"
        format: "date-time"
        description: "Will be added automatically upon insert."
      ids:
        type: "array"
        description: "Other identifiers for the line items of the prescription, such as the dm+d code."
        items:
          $ref: '#/definitions/ID'
      name:
        type: "string"
        description: "The drug/item requested/ordered."
      instructions:
        type: "string"
      status:
        description: "The status of the fulfilment of the delivery of this item. New PrescriptionRequest items will default to SELECTED. New PrescriptionOrder items will default to RECEIVED."
        type: "array"
        items:
          $ref: '#/definitions/Status'
      controlled_drug:
        description: "Flag determining that this item is a controlled drug. Assumed to be false."
        type: "boolean"
      issue:
        type: "object"
        allOf:
          - $ref: '#/definitions/Issue'
  PrescriptionRequest:
    type: "object"
    required:
      - status
      - _id
      - items
    properties:
      _id:
        type: "string"
        description: "Evergreen Life's internal identifier for the prescription order."
      pharmacy:
        type: "object"
        description: "Will be added automatically by Evergreen Life."
        allOf:
          - $ref: "#/definitions/Organisation"
      status:
        description: "The status of the fulfilment of the delivery of this request as a whole. New orders will default to SELECTED to denote that these are the items the user has selected and intends to order."
        type: "object"
        allOf:
          - $ref: '#/definitions/Status'
      createddate:
        type: "string"
        format: "date-time"
        description: "Will be added automatically by Evergreen Life."
      modifieddate:
        type: "string"
        format: "date-time"
        description: "Will be added automatically by Evergreen Life."
      items:
        type: "array"
        items:
          $ref: "#/definitions/PrescriptionOrderItem"
  PrescriptionOrder:
    type: "object"
    required:
      - status
      - ids
      - items
    properties:
      _id:
        type: "string"
        description: "Evergreen Life's internal identifier for the prescription order."
      fulfilledby:
        type: "object"
        description: "Will be added automatically by Evergreen Life."
        allOf:
          - $ref: "#/definitions/Organisation"
      status:
        description: "The complete status history of the fulfilment of the delivery of this order as a whole. New orders will default to RECEIVED."
        type: "array"
        items:
          $ref: '#/definitions/Status'
      createddate:
        type: "string"
        format: "date-time"
        description: "Will be added automatically by Evergreen Life."
      modifieddate:
        type: "string"
        format: "date-time"
        description: "Will be added automatically by Evergreen Life."
      ids:
        description: "Other identifiers for the prescription order, such as those provided by the third party fulfiling the order."
        type: "array"
        items:
          $ref: "#/definitions/ID"
      items:
        type: "array"
        items:
          $ref: "#/definitions/PrescriptionOrderItem"
      tracking:
        type: "object"
        allOf:
          - $ref: '#/definitions/Tracking'
  Address:
    type: "object"
    properties:
      address_line_1:
        type: "string"
      address_line_2:
        type: "string"
      address_line_3:
        type: "string"
      address_line_4:
        type: "string"
      address_line_5:
        type: "string"
      postcode:
        type: "string"
      telephone:
        type: "string"
      mobile:
        type: "string"
      email:
        type: "string"
        format: "email"
  Organisation:
    type: "object"
    properties:
      type: 
        type: "string"
        enum: [PRACTICE, PHARMACY]
      lu_serviceprovider_name:
        type: "string"
        description: "Evergreen Life's short provider name"
      display:
        type: "string"
        description: "Display name for the organisation"
      ids:
        type: "array"
        items:
          $ref: "#/definitions/ID"
  Demographics:
    type: "object"
    properties:
      title:
        type: "string"
      callingName:
        type: "string"
      forenames:
        type: "string"
      surname:
        type: "string"
      dob:
        type: "string"
        format: "date"
      sex:
        description: "The user's sex, as understood by their GP practice."
        type: "string"
        enum: [M, F, U]
      address:
        description: "The user's address, as held by their GP practice."
        allOf: 
        - $ref: "#/definitions/Address"
      email:
        description: "The user's email address, as held by Evergreen Life."
        type: "string"
      telephone:
        description: "The user's telephone (landline) number, as held by their GP practice."
        type: "string"
      mobile:
        description: "The user's mobile telephone number, as held by their GP practice."
        type: "string"
      nhs_number:
        type: "string"
        pattern: \d{10}
      practice:
        description: "The user's registered GP practice"
        allOf:
          - $ref: '#/definitions/Organisation'
      pharmacy:
        description: "The user's registered GP practice"
        allOf:
          - $ref: '#/definitions/Organisation'
